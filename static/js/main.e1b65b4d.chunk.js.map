{"version":3,"sources":["utils/api.js","contexts/CurrentUserContext.js","images/logo.svg","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/App.js","index.js"],"names":["api","config","this","_url","url","headers","res","ok","json","Promise","reject","status","fetch","method","then","_onError","inputs","body","JSON","stringify","name","about","cardData","link","cardId","input","avatar","authorization","CurrentUserContext","React","createContext","Header","className","src","logo","alt","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","liker","cardLikeButtonClassName","style","backgroundImage","onClick","onCardClick","type","aria-label","onCardLike","length","onCardDelete","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","item","Footer","PopupWithForm","isOpen","onClose","onSubmit","noValidate","title","children","EditAvatarPopup","inputRef","useRef","useEffect","current","value","event","preventDefault","onUpdateAvatar","id","ref","required","placeholder","EditProfilePopup","useState","setName","description","setDescription","onUpdateUser","onChange","target","minLength","maxLength","AddPlacePopup","setLink","ImagePopup","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCards","all","getUserInfo","getInitialCards","dataUserInfo","dataCards","catch","err","console","log","closeAllPopups","Provider","deleteLike","newCard","state","putLike","deleteCard","answer","filter","inputAvatar","changeAvatar","updateUser","setUserInfo","postNewCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1b65b4d.chunk.js","sourcesContent":["class Api {\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this.headers = config.headers;\r\n    }\r\n    \r\n    _onError (res) {\r\n        if(res.ok){\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n\r\n    getUserInfo () {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'GET',\r\n            headers: this.headers\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    getInitialCards () {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'GET',\r\n            headers: this.headers\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    setUserInfo (inputs) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: inputs.name,\r\n                about: inputs.about\r\n            })\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    postNewCard (cardData) {\r\n        return fetch(`${this._url}cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: cardData.name,\r\n                link: cardData.link,\r\n            })\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    deleteCard (cardId) {\r\n        return fetch(`${this._url}cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    putLike (cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: this.headers,\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    deleteLike (cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n        })\r\n        .then(this._onError)\r\n    }\r\n\r\n    changeAvatar (input) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: input.avatar\r\n            })\r\n        })\r\n        .then(this._onError)\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    url: 'https://mesto.nomoreparties.co/v1/cohort-20/',\r\n    headers: {\r\n        authorization: '4ea02280-fa61-4e20-88ce-aa4e93f95126',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport {api};\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","export default __webpack_public_path__ + \"static/media/logo.be5c04b7.svg\";","import logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Логотип сайта\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n    // Подписка на контекст информации о юзере\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = `card__delete-button ${isOwn && 'card__delete-button_visible'}`;\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some(liker => liker._id === currentUser._id);\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = `card__like-button ${isLiked && 'card__like-button_active'}`; \r\n    \r\n\r\n    function handleClick() { //При клике на карточку в конечном счете сработает handleCardClick из компонента App\r\n        props.onCardClick(props.card); // (handleCardClick \"проброшен\" пропсом onCardClick из App через Main сюда)\r\n    }\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }  \r\n\r\n    return (\r\n        <article className=\"card\">\r\n            <div className=\"card__photo\" style={{ backgroundImage: `url(${props.card.link})` }} onClick={handleClick}/>\r\n            <div className=\"card__photo-info\">\r\n                <h2 className=\"card__text\">{props.card.name}</h2>\r\n                <div className=\"card__like-container\">\r\n                    <button type=\"button\" aria-label=\"like\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                    <p className=\"card__likes-number\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" aria-label=\"delete\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n    // подписка на контекст информации о юзере\r\n    const currentUser = useContext(CurrentUserContext);\r\n   \r\n    return (\r\n        <main className=\"content\">\r\n\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-wrapper\" onClick={props.onEditAvatar}>\r\n                    <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})` }}></div>\r\n                    <div className=\"profile__avatar-change\"></div>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__info-edit\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button type=\"button\" aria-label=\"edit\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__description\">{currentUser.about}</p>\r\n                </div>\r\n                <button type=\"button\" aria-label=\"add\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n\r\n            <section className=\"cards\">\r\n                {\r\n                    props.cards.map(item => ( // jsx оборачиваем в скобки, чтобы избежать проблем с автоматической вставкой точек с запятой\r\n                        <Card card={item} key={item._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/> //Обязательно передается key, т.к. каждая карточка - элемент списка карточек\r\n                    )\r\n                    )\r\n                }\r\n            </section>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className = \"footer__author\">&copy; 2020. Пономарева Полина</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","function PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <button type=\"button\" aria-label=\"close\" className=\"popup__close-button\" onClick={props.onClose}></button>\r\n                <form className=\"popup__form\" name={`${props.name}-form`} onSubmit={props.onSubmit} noValidate>\r\n                    <h2 className=\"popup__header\">{props.title}</h2>\r\n                    {props.children}\r\n                    <button type=\"submit\" className=\"popup__save-button\">Сохранить</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import { useRef, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const inputRef = useRef();\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onUpdateAvatar({\r\n          avatar: inputRef.current.value,\r\n        });\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(!props.isOpen) { // каждый раз при закрытии поп-апа обнуляем поле ввода\r\n            inputRef.current.value = '';\r\n        }\r\n    }, [props.isOpen] )\r\n\r\n    return (\r\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\r\n            <input id=\"avatar-link-input\" ref={inputRef} type=\"url\" className=\"popup__form-item\" name=\"link\" required placeholder=\"Ссылка на фото\"/>\r\n            <span id=\"avatar-link-input-error\" className=\"popup__form-item-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n    // подписка на контекст информации о юзере\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    function handleChangeName(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleChangeDescription(event) {\r\n        setDescription(event.target.value);\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n            name: name,\r\n            about: description,\r\n          });\r\n    }\r\n\r\n    // Эффект, вызываемый при монтировании компонента и при обновлении информации о юзере\r\n    useEffect(() => {\r\n        if (currentUser.name) { // избегаем ситуации, когда данные пользователя еще не получены от сервера ( чтобы в стейты не записать undifined)\r\n            setName(currentUser.name);\r\n        }\r\n        if (currentUser.about) {\r\n            setDescription(currentUser.about);\r\n        }\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\r\n            <input id=\"name-input\" type=\"text\" value={name} onChange={handleChangeName} className=\"popup__form-item popup__form-item_value_name\" name=\"name\" minLength={2} maxLength={40} required placeholder=\"Имя\"/>\r\n            <span id=\"name-input-error\" className=\"popup__form-item-error\"></span>\r\n            <input id=\"description-input\" type=\"text\" value={description} onChange={handleChangeDescription} className=\"popup__form-item popup__form-item_value_description\" name=\"description\"  minLength={2} maxLength={200} required placeholder=\"О себе\"/>\r\n            <span id=\"description-input-error\" className=\"popup__form-item-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import { useState, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [name, setName] = useState('');\r\n    const [link, setLink] = useState('');\r\n\r\n    function handleChangeName (event) {\r\n        setName(event.target.value)\r\n    }\r\n    function handleChangeLink (event) {\r\n        setLink(event.target.value)\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAddPlace({\r\n            name, // эквивалентно name: name\r\n            link // link: link \r\n        });\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(!props.isOpen) { // каждый раз при закрытии поп-апа обнуляем поля ввода\r\n            setName('');\r\n            setLink('');\r\n        }\r\n    }, [props.isOpen] )\r\n\r\n    return (\r\n        <PopupWithForm name=\"cards\" title=\"Новое место\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\r\n            <input id=\"place-name-input\" type=\"text\" value={name} onChange={handleChangeName} className=\"popup__form-item popup__form-item_value_place-name\" name=\"title\" minLength={2} maxLength={30} required placeholder=\"Название\"/>\r\n            <span id=\"place-name-input-error\" className=\"popup__form-item-error\"></span>\r\n            <input id=\"link-input\" type=\"url\" value={link} onChange={handleChangeLink} className=\"popup__form-item popup__form-item_value_link\" name=\"link\" required placeholder=\"Ссылка на картинку\"/>\r\n            <span id=\"link-input-error\" className=\"popup__form-item-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","function ImagePopup(props) {\r\n    return (\r\n        <div className={`popup popup_type_image ${props.card.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <button type=\"button\" aria-label=\"close\" className=\"popup__close-button\" onClick={props.onClose}></button>\r\n                <img className='popup__photo' src={props.card.link} alt=''/>\r\n                <p className=\"popup__photo-name\">{props.card.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import { useState, useEffect } from 'react';\nimport { api } from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState({});\n    const [isEditAvatarPopupOpen,setIsEditAvatarPopupOpen] = useState(false);\n    const [isEditProfilePopupOpen,setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen,setIsAddPlacePopupOpen] = useState(false);\n    const [selectedCard,setSelectedCard] = useState({isOpen: false, link: '', name: ''});\n    const [cards,setCards] = useState([]);\n\n    // Эффект, вызываемый при монтировании компонента\n    useEffect( () => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([dataUserInfo, dataCards]) => {\n                // Добавление информации о пользователе с сервера на страницу:\n                setCurrentUser(dataUserInfo); // поля объекта: avatar, name, about, _id и cohort\n                // Добавление существующих на сервере карточек на страницу:\n                setCards(dataCards);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [] )\n\n    const handleEditAvatarClick = () => {\n        setIsEditAvatarPopupOpen(true);\n    };\n    const handleEditProfileClick = () => {\n        setIsEditProfilePopupOpen(true);\n    };\n    const handleAddPlaceClick = () => {\n        setIsAddPlacePopupOpen(true);\n    };\n    const handleCardClick = (card) => {\n        setSelectedCard({isOpen: true, link: card.link,name: card.name });\n    };\n    const closeAllPopups = () => {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n\n        setSelectedCard({isOpen: false, link: '',name: ''});\n    }\n\n    function handleUpdateUser (inputs) {\n        api.setUserInfo(inputs)\n            .then((updateUser) => {\n                setCurrentUser(updateUser);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n        closeAllPopups();\n    }\n\n    function handleUpdateAvatar (inputAvatar) {\n        api.changeAvatar(inputAvatar)\n            .then((updateUser) => {\n                setCurrentUser(updateUser);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n        closeAllPopups();\n    }\n\n    function handleCardLike (card) {\n        // Проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(liker => liker._id === currentUser._id);\n        if (!isLiked) {\n            api.putLike(card._id)\n                .then((newCard) => { // получили данные лайкнутой карточки (лайк уже проставлен)\n                    // в cards записываем новый массив, который получен так:\n                    // в текущем массиве перебираем карточки и когда id одной из карточек совпадает с id нашей карточки,\n                    // менем ее на новую (с лайком)\n                    setCards((state) => state.map((item) => item._id === card._id ? newCard : item)); // state - это текущий стейт (т.е необновленный cards)\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n\n        } else {\n            api.deleteLike(card._id)\n                .then((newCard) => { //аналогично\n                    setCards((state) => state.map((item) => item._id === card._id ? newCard : item));\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    }\n\n    function handleCardDelete (card) {\n        // Определяем, являемся ли мы владельцем карточки\n        const isOwn = card.owner._id === currentUser._id;\n        if (isOwn) {\n            api.deleteCard(card._id)\n                .then((answer) => {\n                    setCards((state) => state.filter((item) => item._id !== card._id));\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    }\n\n    function handleAddPlaceSubmit (card) {\n        api.postNewCard(card)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n        closeAllPopups();\n    }\n\n    return (\n        < CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <Header/>\n                <Main onEditAvatar={handleEditAvatarClick}\n                      onEditProfile={handleEditProfileClick}\n                      onAddPlace={handleAddPlaceClick} \n                      onCardClick={handleCardClick}\n                      cards={cards}\n                      onCardLike={handleCardLike}\n                      onCardDelete={handleCardDelete}/>\n                <Footer/>\n\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onUpdateAvatar={handleUpdateAvatar} onClose={closeAllPopups}/>\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onUpdateUser={handleUpdateUser} onClose={closeAllPopups}/>\n                <AddPlacePopup  isOpen={isAddPlacePopupOpen} onAddPlace={handleAddPlaceSubmit} onClose={closeAllPopups}/>\n\n                <PopupWithForm name=\"confirm\" title=\"Вы уверены?\"/>\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}